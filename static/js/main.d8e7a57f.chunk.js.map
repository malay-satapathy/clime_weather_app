{"version":3,"sources":["logo.svg","components/Search.jsx","components/Results.jsx","components/Footer.jsx","history/history.jsx","views/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","error","cityInput","React","createRef","startSearch","bind","fetchData","e","console","log","this","current","value","setState","preventDefault","cityName","thisThis","fetch","then","response","ok","Error","statusText","json","jsonResponse","updateWeather","history","push","catch","className","onSubmit","placeholder","ref","type","Component","withRouter","Results","weatherInfo","weather","city","name","temp","Math","round","main","minTemp","temp_min","maxTemp","temp_max","status","description","backgroundColor","to","Footer","createBrowserHistory","Dashboard","weatherData","jsonData","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAAe,I,iECIFA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,YAGT,EAAKC,UAAYC,IAAMC,YAEvB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAVA,EADrB,+CAcE,SAAYE,GACVC,QAAQC,IAAI,WAAaC,KAAKT,UAAUU,QAAQC,OAEX,KAAjCF,KAAKT,UAAUU,QAAQC,QACzBF,KAAKJ,YAELI,KAAKG,SAAS,CACZb,MAAO,cAIXO,EAAEO,mBAzBN,uBA4BE,WAEE,IACIC,EAAWL,KAAKT,UAAUU,QAAQC,MAElCI,EAAWN,KAEfO,MAAM,qDAAD,OACkDF,EADlD,kBALQ,mCAKR,oBAGFG,MAAK,SAAUC,GACd,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,KAERD,MAAK,SAAUC,GACd,OAAOA,EAASI,UAEjBL,MAAK,SAAUM,GACdhB,QAAQC,IAAIe,GACZR,EAASlB,MAAM2B,cAAcD,GAC7BR,EAASlB,MAAM4B,QAAQC,KAAK,eAE7BC,OAAM,SAAU5B,GACfgB,EAASH,SAAS,CAChBb,MAAO,cAETQ,QAAQC,IAAIT,QAxDpB,oBA4DE,WACE,OACE,sBAAK6B,UAAW,cAAgBnB,KAAKX,MAAMC,MAA3C,UACE,oBAAI6B,UAAU,aAAd,uBACA,uBAAMC,SAAUpB,KAAKN,YAArB,UACE,uBACEyB,UAAU,aACVE,YAAY,8BACZC,IAAKtB,KAAKT,UACVgC,KAAK,SAEP,uBAAOJ,UAAU,eAAeI,KAAK,SAASrB,MAAM,qBAvE9D,GAA4BsB,aA8EbC,cAAWtC,G,QC5BXuC,G,MAlDf,4JACE,WAGE,GAFA5B,QAAQC,IAAIC,KAAKZ,OAEc,KAA3BY,KAAKZ,MAAMuC,YAAoB,CACjC,IAAIC,EAAU5B,KAAKZ,MAAMuC,YACrBE,EAAOD,EAAQE,KACfC,EAAOC,KAAKC,MAAML,EAAQM,KAAKH,MAC/BI,EAAUH,KAAKC,MAAML,EAAQM,KAAKE,UAClCC,EAAUL,KAAKC,MAAML,EAAQM,KAAKI,UAClCC,EAASX,EAAQA,QAAQ,GAAGM,KAC5BM,EAAcZ,EAAQA,QAAQ,GAAGY,YAEjCC,EAAkB,GAUtB,OAPEA,EADEV,EAAO,GACS,MACTA,EAAO,GACE,OAEA,OAIlB,sBAAKZ,UAAW,WAAasB,EAA7B,UACE,sBAAKtB,UAAU,mBAAf,UACE,qBAAIA,UAAU,OAAd,UAAsBY,EAAtB,UACA,mBAAGZ,UAAU,SAAb,SAAuBoB,IACvB,oBAAGpB,UAAU,WAAb,gBACK,sBAAMA,UAAU,OAAhB,SAAwBU,IAD7B,2BACkE,IAChE,sBAAMV,UAAU,OAAhB,SAAwBqB,IAF1B,8EAGuD,IACrD,uBAAMrB,UAAU,OAAhB,UAAwBgB,EAAxB,UAJF,iBAIyD,IACvD,uBAAMhB,UAAU,OAAhB,UAAwBkB,EAAxB,UALF,UAQF,cAAC,IAAD,CAAMK,GAAG,IAAT,wBAIJ,OACE,sBAAKvB,UAAU,oBAAf,UACE,iEACA,cAAC,IAAD,CAAMuB,GAAG,IAAT,4BA3CV,GAA6BlB,c,MCOdmB,MARf,WACE,OACE,qBAAKxB,UAAU,SAAf,SACE,6D,OCJSyB,gBC8CAC,G,MAxCf,kDACE,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXyD,YAAa,IAGf,EAAK/B,cAAgB,EAAKA,cAAcpB,KAAnB,gBAPJ,EADrB,iDAWE,SAAcoD,GACZjD,QAAQC,IAAIgD,GAEZ/C,KAAKG,SAAS,CACZ2C,YAAaC,MAfnB,oBAmBE,WACE,OACE,gCACE,qBAAK5B,UAAU,YAAf,SACE,cAAC,IAAD,CAAQH,QAASA,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAQlC,cAAef,KAAKe,kBAE9B,cAAC,IAAD,CAAOkC,KAAK,WAAZ,SACE,cAAC,EAAD,CAAStB,YAAa3B,KAAKX,MAAMyD,uBAKzC,cAAC,EAAD,WAlCR,GAA+BtB,cCIhB0B,MARf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8e7a57f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"../styles/search.css\";\r\n\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: \"no_error\",\r\n    };\r\n\r\n    this.cityInput = React.createRef();\r\n\r\n    this.startSearch = this.startSearch.bind(this);\r\n    this.fetchData = this.fetchData.bind(this);\r\n  }\r\n\r\n  startSearch(e) {\r\n    console.log(\"Search! \" + this.cityInput.current.value);\r\n\r\n    if (this.cityInput.current.value !== \"\") {\r\n      this.fetchData();\r\n\r\n      this.setState({\r\n        error: \"no_error\",\r\n      });\r\n    }\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  fetchData() {\r\n    // you should get an API key from: https://openweathermap.org/api\r\n    var apiKey = \"bab866c7637eea0bcc96f4e93e003ec5\";\r\n    var cityName = this.cityInput.current.value;\r\n\r\n    var thisThis = this;\r\n\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${apiKey}&units=imperial`\r\n    )\r\n      .then(function (response) {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (jsonResponse) {\r\n        console.log(jsonResponse);\r\n        thisThis.props.updateWeather(jsonResponse);\r\n        thisThis.props.history.push(\"/results\");\r\n      })\r\n      .catch(function (error) {\r\n        thisThis.setState({\r\n          error: \"yes_error\",\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"searchMain \" + this.state.error}>\r\n        <h1 className=\"searchArea\">Cli-mate!</h1>\r\n        <form onSubmit={this.startSearch}>\r\n          <input\r\n            className=\"searchArea\"\r\n            placeholder=\"Enter city name or zip code\"\r\n            ref={this.cityInput}\r\n            type=\"text\"\r\n          />\r\n          <input className=\"searchButton\" type=\"submit\" value=\"Search\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Search);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/results.css\";\r\n\r\nexport class Results extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    if (this.props.weatherInfo !== \"\") {\r\n      var weather = this.props.weatherInfo;\r\n      var city = weather.name;\r\n      var temp = Math.round(weather.main.temp);\r\n      var minTemp = Math.round(weather.main.temp_min);\r\n      var maxTemp = Math.round(weather.main.temp_max);\r\n      var status = weather.weather[0].main;\r\n      var description = weather.weather[0].description;\r\n\r\n      var backgroundColor = \"\";\r\n\r\n      if (temp > 70) {\r\n        backgroundColor = \"hot\";\r\n      } else if (temp < 50) {\r\n        backgroundColor = \"cold\";\r\n      } else {\r\n        backgroundColor = \"warm\";\r\n      }\r\n\r\n      return (\r\n        <div className={\"results \" + backgroundColor}>\r\n          <div className=\"resultsContainer\">\r\n            <h1 className=\"temp\">{temp}°</h1>\r\n            <p className=\"status\">{status}</p>\r\n            <p className=\"longText\">\r\n              In <span className=\"info\">{city}</span> currently, you will see{\" \"}\r\n              <span className=\"info\">{description}</span> if you happen to look\r\n              outside. The temperature will range between a low of{\" \"}\r\n              <span className=\"info\">{minTemp}°</span> and a high of{\" \"}\r\n              <span className=\"info\">{maxTemp}°</span>.\r\n            </p>\r\n          </div>\r\n          <Link to=\"/\">go back</Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"results error hot\">\r\n          <h1>Something went wrong somewhere!</h1>\r\n          <Link to=\"/\">go back</Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport \"../styles/footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Powered by MindStorm Inc.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport Results from \"../components/Results\";\r\nimport Footer from \"../components/Footer\";\r\nimport history from \"../history/history\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"../styles/dashboard.css\";\r\n\r\nexport class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      weatherData: \"\",\r\n    };\r\n\r\n    this.updateWeather = this.updateWeather.bind(this);\r\n  }\r\n\r\n  updateWeather(jsonData) {\r\n    console.log(jsonData);\r\n\r\n    this.setState({\r\n      weatherData: jsonData,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard\">\r\n          <Router history={history}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Search updateWeather={this.updateWeather}></Search>\r\n              </Route>\r\n              <Route path=\"/results\">\r\n                <Results weatherInfo={this.state.weatherData}></Results>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './views/Dashboard';\n\nfunction App() {\n  return (\n    <Dashboard>\n\n    </Dashboard>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}